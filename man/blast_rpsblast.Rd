% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blast_rpsblast.R
\name{blast_rpsblast}
\alias{blast_rpsblast}
\title{Perform Reverse PSI-BLAST searches (rpsblast)}
\usage{
blast_rpsblast(
  query,
  db,
  db.alias,
  prep.db = FALSE,
  output.path = NULL,
  db.import = FALSE,
  postgres.user = NULL,
  evalue = 0.001,
  out.format = "csv",
  cores = 1,
  blast.path = NULL
)
}
\arguments{
\item{query}{path to input file in fasta format.}

\item{db}{path to rpsblast-able database or smp files if \code{prep.db = NULL}.}

\item{db.alias}{alias for database files}

\item{prep.db}{logical, default FALSE; if TRUE - prep db before running rpsblast.}

\item{output.path}{path to folder at which BLAST output table shall be stored.}

\item{db.import}{shall the BLAST output be stored in a PostgresSQL database and shall a connection be established to this database? Default is \code{db.import = FALSE}.
In case users wish to to only generate a BLAST output file without importing it to the current R session they can specify \code{db.import = NULL}.}

\item{postgres.user}{when \code{db.import = TRUE} and \code{out.format = "postgres"} is selected, the BLAST output is imported and stored in a 
PostgresSQL database. In that case, users need to have PostgresSQL installed and initialized on their system. 
Please consult the Installation Vignette for details.}

\item{evalue}{Expectation value (E) threshold for saving hits (default: \code{evalue = 0.001}).}

\item{out.format}{a character string specifying the format of the file in which the rpsblast results shall be stored.
Available options are:
 \itemize{
 \item \code{out.format = "pair"} : Pairwise
 \item \code{out.format = "qa.ident"} : Query-anchored showing identities
 \item \code{out.format = "qa.nonident"} : Query-anchored no identities
 \item \code{out.format = "fq.ident"} : Flat query-anchored showing identities
 \item \code{out.format = "fq.nonident"} : Flat query-anchored no identities
 \item \code{out.format = "xml"} : XML
 \item \code{out.format = "tab"} : Tabular separated file
 \item \code{out.format = "tab.comment"} : Tabular separated file with comment lines
 \item \code{out.format = "ASN.1.text"} : Seqalign (Text ASN.1)
 \item \code{out.format = "ASN.1.binary"} : Seqalign (Binary ASN.1)
 \item \code{out.format = "csv"} : Comma-separated values
 \item \code{out.format = "ASN.1"} : BLAST archive (ASN.1)
 \item \code{out.format = "json.seq.aln"} : Seqalign (JSON)
 \item \code{out.format = "json.blast.multi"} : Multiple-file BLAST JSON
 \item \code{out.format = "xml2.blast.multi"} : Multiple-file BLAST XML2
 }}

\item{cores}{number of cores for parallel rpsblast searches.}

\item{blast.path}{path to rpsblast executables.}
}
\description{
Run rpsblast (Reverse PSI-BLAST) searches a query sequence against a database of profiles, or score matrices, producing BLAST-like output.
}
\examples{
\dontrun{
db_path <- '/home/Cdd'
db_alias <- 'myCdd'
rps_test <- blast_rpsblast(query = system.file('seqs/sbj_aa.fa', package = 'metablastr'), 
                           db = db_path, 
                           db.alias = db_alias, 
                           prep.db = FALSE)
}
}
\seealso{
\code{\link{blast_protein_to_protein}}, \code{\link{blast_nucleotide_to_protein}}
}
\author{
Hajk-Georg Drost, Anna Gogleva
}
