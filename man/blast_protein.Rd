% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blast_protein.R
\name{blast_protein}
\alias{blast_protein}
\title{Perform Protein to Protein BLAST Searches}
\usage{
blast_protein(query, subject, output.path = NULL, is.subject.db = FALSE,
  task = "blastp", import = FALSE, postgres.user = NULL, evalue = 0.001,
  out.format = "tab", cores = 1, max.target.seqs = 500,
  db.soft.mask = FALSE, db.hard.mask = FALSE, blast.path = NULL)
}
\arguments{
\item{query}{path to input file in fasta format.}

\item{subject}{path to subject file in fasta format or blast-able database.}

\item{is.subject.db}{logical specifying whether or not the \code{subject} file is a file in fasta format (\code{is.subject.db = FALSE}; default)
or a blast-able database that was formatted with \code{makeblastdb} (\code{is.subject.db = TRUE}).}

\item{task}{protein search task option. Options are:
\itemize{
\item \code{task = "blastp"} : Standard protein-protein comparisons (default).
\item \code{task = "blast-fast"} : Improved BLAST searches using longer words for protein seeding.
\item \code{task = "blastp-short"} : Optimized protein-protein comparisons for query sequences shorter than 30 residues.
}}

\item{import}{shall output of the protein BLAST search be directly imported via \code{\link{read_blast}}? Default is \code{import = FALSE}.}

\item{postgres.user}{when \code{import = TRUE} and \code{out.format = "tab"} is selected, the BLAST output is imported and stored in a 
PostgresSQL database. In that case, users need to have PostgresSQL installed and initialized on their system. 
Please consult the Installation Vignette for details.}

\item{evalue}{Expectation value (E) threshold for saving hits (default: \code{evalue = 10}).}

\item{out.format}{a character string specifying the format of the file in which the BLAST results shall be stored.
Available options are:
 \itemize{
 \item \code{out.format = "pair"} : Pairwise
 \item \code{out.format = "qa.ident"} : Query-anchored showing identities
 \item \code{out.format = "qa.nonident"} : Query-anchored no identities
 \item \code{out.format = "fq.ident"} : Flat query-anchored showing identities
 \item \code{out.format = "fq.nonident"} : Flat query-anchored no identities
 \item \code{out.format = "xml"} : XML
 \item \code{out.format = "tab"} : Tabular separated file
 \item \code{out.format = "tab.comment"} : Tabular separated file with comment lines
 \item \code{out.format = "ASN.1.text"} : Seqalign (Text ASN.1)
 \item \code{out.format = "ASN.1.binary"} : Seqalign (Binary ASN.1)
 \item \code{out.format = "csv"} : Comma-separated values
 \item \code{out.format = "ASN.1"} : BLAST archive (ASN.1)
 \item \code{out.format = "json.seq.aln"} : Seqalign (JSON)
 \item \code{out.format = "json.blast.multi"} : Multiple-file BLAST JSON
 \item \code{out.format = "xml2.blast.multi"} : Multiple-file BLAST XML2
 \item \code{out.format = "json.blast.single"} : Single-file BLAST JSON
 \item \code{out.format = "xml2.blast.single"} : Single-file BLAST XML2
 \item \code{out.format = "report"} : Organism Report
 }}

\item{cores}{number of cores for parallel BLAST searches.}

\item{max.target.seqs}{maximum number of aligned sequences that shall be kept.}

\item{db.soft.mask}{shall low complexity regions be soft masked? Default is \code{db.soft.mask = FALSE}.}

\item{db.hard.mask}{shall low complexity regions be hard masked? Default is \code{db.hard.mask = FALSE}.}

\item{blast.path}{path to BLAST executables.}
}
\description{
Run protein to protein BLAST of reference sequences
against a blast-able database.
}
\examples{
\dontrun{
blast_protein(query   = system.file('seqs/qry_aa.fa', package = 'metablastr'),
              subject = system.file('seqs/sbj_aa.fa', package = 'metablastr'),
              out.format = "csv",
              import  = TRUE)
}


}
\author{
Hajk-Georg Drost
}
